{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\React\\\\telekom-prices-calculator\\\\src\\\\components\\\\ServiceCalculator\\\\ServiceCalculator.js\",\n  _s = $RefreshSig$();\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INTERNET = 1;\nconst TV = 2;\nconst PHONE_SUB = 4;\nconst DECODER = 8;\nconst INTERNET_TV = INTERNET + TV; // 3\nconst INTERNET_PHONE = INTERNET + PHONE_SUB; // 5\n\nexport default function ServiceCalculator(props) {\n  _s();\n  const [selectedYear, setSelectedYear] = useState();\n  const findBestDeal = () => {\n    var _props$selectedServic;\n    //ZMIENNA PRZECHOWUJACA CENE LACZNA DLA DANEJ KOMBINACJI PAKIETOW\n    let totalPrice = 0;\n    //ZMIENNA PRZECHOWUJACA NAJLEPSZA CENE PAKIETOW\n    let bestPrice = -1;\n    //WYBRANE PAKIETY\n    let selectedIndexes = [];\n\n    //JESLI NIE WYBRANO ROKU LUB USLUGI CENA - 0\n    if (!selectedYear || !props.selectedServices.length) return totalPrice;\n\n    //JESLI WYBRANO TYLKO JEDNA USLUGE\n    if (props.selectedServices.length === 1) return props.pricesMatrix[props.selectedServices[0]][selectedYear];\n\n    //SPRAWDZAM CENY DLA KAZDEGO INDEKSU\n    (_props$selectedServic = props.selectedServices) === null || _props$selectedServic === void 0 ? void 0 : _props$selectedServic.forEach(service => {\n      let servicesTemp = [...props.selectedServices].filter(serv => serv !== service);\n      let selectedIndexesTemp = [];\n      //W OBREBIE DANEGO INDEKSU SPRAWDZAM KAZDY INNY PO KOLEI CZY TWORZA PAKIET\n      servicesTemp.forEach(serviceTemp => {\n        totalPrice = 0;\n        let servicesTempToSum = [...servicesTemp].filter(serv => serv !== serviceTemp);\n        if (props.pricesMatrix[service + serviceTemp]) {\n          //JESLI TWORZA PAKIET DODAJE GO DO SUMY\n          totalPrice += props.pricesMatrix[service + serviceTemp][selectedYear];\n          selectedIndexesTemp.push(service + serviceTemp);\n        } else {\n          //JESLI NIE TWORZA PAKIETU DODAJE JE OSOBNO\n          totalPrice += props.pricesMatrix[service][selectedYear] + props.pricesMatrix[serviceTemp][selectedYear];\n          selectedIndexesTemp.push(service);\n          selectedIndexesTemp.push(serviceTemp);\n        }\n        //NASTEPNIE WSZYSTKIE INNE USLUGI DODAJE\n        servicesTempToSum.forEach(serviceToSum => {\n          //JESLI SPRAWDZAM CENY DLA PAKIETU INTERNET + TELEWIZJA I AKTUALNIE JESTESM NA DEKODERZE USTAWIAM MU CENE 0\n          serviceToSum === DECODER && service + serviceTemp === INTERNET_TV ? totalPrice += 0 : totalPrice += props.pricesMatrix[serviceToSum][selectedYear];\n          selectedIndexesTemp.push(serviceToSum);\n        });\n        //PRZYPISUJE WYBRANE PAKIETY I MINIMALNA CENE ZE ZMIENNYCH POMOCNICZYCH\n        selectedIndexes = bestPrice > totalPrice || bestPrice === -1 ? selectedIndexesTemp : selectedIndexes;\n        bestPrice = bestPrice > totalPrice || bestPrice === -1 ? totalPrice : bestPrice;\n        console.log(bestPrice);\n        console.log(selectedIndexesTemp);\n        console.log(selectedIndexesTemp);\n        console.log(props.selectedServices);\n      });\n    });\n    //FORMATUJE INDEKSY TAK, ABY BYLA INFORMACJA ZWROTNA O WYBRANYCH PAKIETACH\n    let selectedServicesString = selectedIndexes.map(service => {\n      return props.serviceNames[service];\n    });\n    console.log(selectedIndexes);\n    return `${bestPrice} ${selectedServicesString.join(', ')}`;\n  };\n  findBestDeal();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: props.yearOptions,\n      onChange: selected => setSelectedYear(selected.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Suma: \", findBestDeal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceCalculator, \"MrMte6deRnur+RXpA0hVVgg6iU0=\");\n_c = ServiceCalculator;\n;\nvar _c;\n$RefreshReg$(_c, \"ServiceCalculator\");","map":{"version":3,"names":["Select","useState","jsxDEV","_jsxDEV","INTERNET","TV","PHONE_SUB","DECODER","INTERNET_TV","INTERNET_PHONE","ServiceCalculator","props","_s","selectedYear","setSelectedYear","findBestDeal","_props$selectedServic","totalPrice","bestPrice","selectedIndexes","selectedServices","length","pricesMatrix","forEach","service","servicesTemp","filter","serv","selectedIndexesTemp","serviceTemp","servicesTempToSum","push","serviceToSum","console","log","selectedServicesString","map","serviceNames","join","className","children","options","yearOptions","onChange","selected","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/GitHub/React/telekom-prices-calculator/src/components/ServiceCalculator/ServiceCalculator.js"],"sourcesContent":["import Select from \"react-select\";\r\nimport {useState} from \"react\";\r\n\r\nconst INTERNET = 1;\r\nconst TV = 2;\r\nconst PHONE_SUB = 4;\r\nconst DECODER = 8;\r\nconst INTERNET_TV = INTERNET + TV; // 3\r\nconst INTERNET_PHONE = INTERNET + PHONE_SUB; // 5\r\n\r\nexport default function ServiceCalculator(props) {\r\n  const [selectedYear, setSelectedYear] = useState();\r\n\r\n  const findBestDeal = () => {\r\n    //ZMIENNA PRZECHOWUJACA CENE LACZNA DLA DANEJ KOMBINACJI PAKIETOW\r\n    let totalPrice = 0;\r\n    //ZMIENNA PRZECHOWUJACA NAJLEPSZA CENE PAKIETOW\r\n    let bestPrice = -1;\r\n    //WYBRANE PAKIETY\r\n    let selectedIndexes = [];\r\n\r\n    //JESLI NIE WYBRANO ROKU LUB USLUGI CENA - 0\r\n    if(!selectedYear || !props.selectedServices.length) return totalPrice;\r\n\r\n    //JESLI WYBRANO TYLKO JEDNA USLUGE\r\n    if(props.selectedServices.length === 1) return props.pricesMatrix[props.selectedServices[0]][selectedYear]\r\n\r\n    //SPRAWDZAM CENY DLA KAZDEGO INDEKSU\r\n    props.selectedServices?.forEach(service => {\r\n      let servicesTemp = [...props.selectedServices].filter(serv => serv !== service);\r\n      let selectedIndexesTemp = [];\r\n      //W OBREBIE DANEGO INDEKSU SPRAWDZAM KAZDY INNY PO KOLEI CZY TWORZA PAKIET\r\n      servicesTemp.forEach(serviceTemp => {\r\n        totalPrice = 0;\r\n        let servicesTempToSum = [...servicesTemp].filter(serv => serv !== serviceTemp);\r\n        if(props.pricesMatrix[service + serviceTemp]){\r\n          //JESLI TWORZA PAKIET DODAJE GO DO SUMY\r\n          totalPrice += props.pricesMatrix[service + serviceTemp][selectedYear]\r\n          selectedIndexesTemp.push(service + serviceTemp);\r\n        }\r\n        else{\r\n          //JESLI NIE TWORZA PAKIETU DODAJE JE OSOBNO\r\n          totalPrice += props.pricesMatrix[service][selectedYear] + props.pricesMatrix[serviceTemp][selectedYear];\r\n          selectedIndexesTemp.push(service);\r\n          selectedIndexesTemp.push(serviceTemp);\r\n        }\r\n        //NASTEPNIE WSZYSTKIE INNE USLUGI DODAJE\r\n        servicesTempToSum.forEach(serviceToSum => {\r\n          //JESLI SPRAWDZAM CENY DLA PAKIETU INTERNET + TELEWIZJA I AKTUALNIE JESTESM NA DEKODERZE USTAWIAM MU CENE 0\r\n          serviceToSum === DECODER && (service + serviceTemp) === INTERNET_TV?\r\n            totalPrice += 0\r\n              :\r\n            totalPrice += props.pricesMatrix[serviceToSum][selectedYear];\r\n            selectedIndexesTemp.push(serviceToSum);\r\n        })\r\n        //PRZYPISUJE WYBRANE PAKIETY I MINIMALNA CENE ZE ZMIENNYCH POMOCNICZYCH\r\n        selectedIndexes = bestPrice > totalPrice || bestPrice === -1 ? selectedIndexesTemp : selectedIndexes;\r\n        bestPrice = bestPrice > totalPrice || bestPrice === -1 ? totalPrice : bestPrice;\r\n        console.log(bestPrice)\r\n        console.log(selectedIndexesTemp)\r\n        console.log(selectedIndexesTemp)\r\n        console.log(props.selectedServices)\r\n      })\r\n    })\r\n    //FORMATUJE INDEKSY TAK, ABY BYLA INFORMACJA ZWROTNA O WYBRANYCH PAKIETACH\r\n    let selectedServicesString = selectedIndexes.map(service => {return props.serviceNames[service]})\r\n    console.log(selectedIndexes)\r\n    return `${bestPrice} ${selectedServicesString.join(', ')}`;\r\n  }\r\n\r\n  findBestDeal();\r\n\r\n  return (\r\n    <div className=\"service-calculator\">\r\n\r\n      <Select\r\n        options={props.yearOptions}\r\n        onChange={(selected) => setSelectedYear(selected.value)}\r\n      />\r\n\r\n      <p>Suma: {findBestDeal()}</p>\r\n    </div>\r\n  )\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}