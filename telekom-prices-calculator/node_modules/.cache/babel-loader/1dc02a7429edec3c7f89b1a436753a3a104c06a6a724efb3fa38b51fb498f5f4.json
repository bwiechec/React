{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\React\\\\telekom-prices-calculator\\\\src\\\\components\\\\ServiceCalculator\\\\ServiceCalculator.js\",\n  _s = $RefreshSig$();\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport * as utils from \"../../Utils/utlis\";\nimport Paper from \"@mui/material/Paper\";\nimport ServiceCalculatorOffer from \"./ServiceCalculatorOffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ServiceCalculator(props) {\n  _s();\n  const [selectedYear, setSelectedYear] = useState();\n  const findBestDeal = () => {\n    var _props$selectedServic;\n    //ZMIENNA PRZECHOWUJACA CENE LACZNA DLA DANEJ KOMBINACJI PAKIETOW\n    let totalPrice = 0;\n    //ZMIENNA PRZECHOWUJACA NAJLEPSZA CENE PAKIETOW\n    let bestPrice = -1;\n    //WYBRANE PAKIETY\n    let selectedIndexes = [];\n\n    //JESLI NIE WYBRANO ROKU LUB USLUGI CENA - 0\n    if (!selectedYear || !props.selectedServices.length) return /*#__PURE__*/_jsxDEV(ServiceCalculatorOffer, {\n      bestPrice: totalPrice,\n      selectedServicesString: ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 64\n    }, this);\n\n    //JESLI WYBRANO TYLKO JEDNA USLUGE\n    if (props.selectedServices.length === 1) return /*#__PURE__*/_jsxDEV(ServiceCalculatorOffer, {\n      bestPrice: utils.pricesMatrix[props.selectedServices[0]][selectedYear],\n      selectedServicesString: utils.serviceNames[props.selectedServices[0]]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n\n    //SPRAWDZAM CENY DLA KAZDEGO INDEKSU\n    (_props$selectedServic = props.selectedServices) === null || _props$selectedServic === void 0 ? void 0 : _props$selectedServic.forEach(service => {\n      let servicesTemp = [...props.selectedServices].filter(serv => serv !== service);\n      let selectedIndexesTemp = [];\n      //W OBREBIE DANEGO INDEKSU SPRAWDZAM KAZDY INNY PO KOLEI CZY TWORZA PAKIET\n      servicesTemp.forEach(serviceTemp => {\n        totalPrice = 0;\n        selectedIndexesTemp = [];\n        let servicesTempToSum = [...servicesTemp].filter(serv => serv !== serviceTemp);\n        if (utils.pricesMatrix[service + serviceTemp]) {\n          //JESLI TWORZA PAKIET DODAJE GO DO SUMY\n          totalPrice += utils.pricesMatrix[service + serviceTemp][selectedYear];\n          selectedIndexesTemp.push(service + serviceTemp);\n        } else {\n          //JESLI NIE TWORZA PAKIETU DODAJE JE OSOBNO\n          totalPrice += utils.pricesMatrix[service][selectedYear] + utils.pricesMatrix[serviceTemp][selectedYear];\n          selectedIndexesTemp.push(service);\n          selectedIndexesTemp.push(serviceTemp);\n        }\n        //NASTEPNIE WSZYSTKIE INNE USLUGI DODAJE\n        servicesTempToSum.forEach(serviceToSum => {\n          //JESLI SPRAWDZAM CENY DLA PAKIETU INTERNET + TELEWIZJA I AKTUALNIE JESTESM NA DEKODERZE USTAWIAM MU CENE 0\n          serviceToSum === utils.DECODER && service + serviceTemp === utils.INTERNET_TV ? totalPrice += 0 : totalPrice += utils.pricesMatrix[serviceToSum][selectedYear];\n          selectedIndexesTemp.push(serviceToSum);\n        });\n        //PRZYPISUJE WYBRANE PAKIETY I MINIMALNA CENE ZE ZMIENNYCH POMOCNICZYCH\n        selectedIndexes = bestPrice > totalPrice || bestPrice === -1 ? selectedIndexesTemp : selectedIndexes;\n        bestPrice = bestPrice > totalPrice || bestPrice === -1 ? totalPrice : bestPrice;\n      });\n    });\n    //FORMATUJE INDEKSY TAK, ABY BYLA INFORMACJA ZWROTNA O WYBRANYCH PAKIETACH\n    let selectedServicesString = selectedIndexes.map(service => {\n      return utils.serviceNames[service];\n    });\n    return /*#__PURE__*/_jsxDEV(ServiceCalculatorOffer, {\n      bestPrice: bestPrice,\n      selectedServicesString: selectedServicesString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: utils.yearOptions,\n      onChange: selected => setSelectedYear(selected.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"service-calculator__summary\",\n      children: findBestDeal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceCalculator, \"MrMte6deRnur+RXpA0hVVgg6iU0=\");\n_c = ServiceCalculator;\n;\nvar _c;\n$RefreshReg$(_c, \"ServiceCalculator\");","map":{"version":3,"names":["Select","useState","utils","Paper","ServiceCalculatorOffer","jsxDEV","_jsxDEV","ServiceCalculator","props","_s","selectedYear","setSelectedYear","findBestDeal","_props$selectedServic","totalPrice","bestPrice","selectedIndexes","selectedServices","length","selectedServicesString","fileName","_jsxFileName","lineNumber","columnNumber","pricesMatrix","serviceNames","forEach","service","servicesTemp","filter","serv","selectedIndexesTemp","serviceTemp","servicesTempToSum","push","serviceToSum","DECODER","INTERNET_TV","map","className","children","options","yearOptions","onChange","selected","value","_c","$RefreshReg$"],"sources":["D:/GitHub/React/telekom-prices-calculator/src/components/ServiceCalculator/ServiceCalculator.js"],"sourcesContent":["import Select from \"react-select\";\r\nimport {useState} from \"react\";\r\nimport * as utils from \"../../Utils/utlis\"\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ServiceCalculatorOffer from \"./ServiceCalculatorOffer\";\r\n\r\nexport default function ServiceCalculator(props) {\r\n  const [selectedYear, setSelectedYear] = useState();\r\n\r\n  const findBestDeal = () => {\r\n    //ZMIENNA PRZECHOWUJACA CENE LACZNA DLA DANEJ KOMBINACJI PAKIETOW\r\n    let totalPrice = 0;\r\n    //ZMIENNA PRZECHOWUJACA NAJLEPSZA CENE PAKIETOW\r\n    let bestPrice = -1;\r\n    //WYBRANE PAKIETY\r\n    let selectedIndexes = [];\r\n\r\n    //JESLI NIE WYBRANO ROKU LUB USLUGI CENA - 0\r\n    if(!selectedYear || !props.selectedServices.length) return <ServiceCalculatorOffer bestPrice={totalPrice} selectedServicesString={''}/>;\r\n\r\n    //JESLI WYBRANO TYLKO JEDNA USLUGE\r\n    if(props.selectedServices.length === 1)\r\n      return <ServiceCalculatorOffer\r\n        bestPrice={utils.pricesMatrix[props.selectedServices[0]][selectedYear]}\r\n        selectedServicesString={utils.serviceNames[props.selectedServices[0]]}\r\n      />\r\n\r\n    //SPRAWDZAM CENY DLA KAZDEGO INDEKSU\r\n    props.selectedServices?.forEach(service => {\r\n      let servicesTemp = [...props.selectedServices].filter(serv => serv !== service);\r\n      let selectedIndexesTemp = [];\r\n      //W OBREBIE DANEGO INDEKSU SPRAWDZAM KAZDY INNY PO KOLEI CZY TWORZA PAKIET\r\n      servicesTemp.forEach(serviceTemp => {\r\n        totalPrice = 0;\r\n        selectedIndexesTemp = []\r\n        let servicesTempToSum = [...servicesTemp].filter(serv => serv !== serviceTemp);\r\n        if(utils.pricesMatrix[service + serviceTemp]){\r\n          //JESLI TWORZA PAKIET DODAJE GO DO SUMY\r\n          totalPrice += utils.pricesMatrix[service + serviceTemp][selectedYear]\r\n          selectedIndexesTemp.push(service + serviceTemp);\r\n        }\r\n        else{\r\n          //JESLI NIE TWORZA PAKIETU DODAJE JE OSOBNO\r\n          totalPrice += utils.pricesMatrix[service][selectedYear] + utils.pricesMatrix[serviceTemp][selectedYear];\r\n          selectedIndexesTemp.push(service);\r\n          selectedIndexesTemp.push(serviceTemp);\r\n        }\r\n        //NASTEPNIE WSZYSTKIE INNE USLUGI DODAJE\r\n        servicesTempToSum.forEach(serviceToSum => {\r\n          //JESLI SPRAWDZAM CENY DLA PAKIETU INTERNET + TELEWIZJA I AKTUALNIE JESTESM NA DEKODERZE USTAWIAM MU CENE 0\r\n          serviceToSum === utils.DECODER && (service + serviceTemp) === utils.INTERNET_TV?\r\n            totalPrice += 0\r\n              :\r\n            totalPrice += utils.pricesMatrix[serviceToSum][selectedYear];\r\n            selectedIndexesTemp.push(serviceToSum);\r\n        })\r\n        //PRZYPISUJE WYBRANE PAKIETY I MINIMALNA CENE ZE ZMIENNYCH POMOCNICZYCH\r\n        selectedIndexes = bestPrice > totalPrice || bestPrice === -1 ? selectedIndexesTemp : selectedIndexes;\r\n        bestPrice = bestPrice > totalPrice || bestPrice === -1 ? totalPrice : bestPrice;\r\n      })\r\n    })\r\n    //FORMATUJE INDEKSY TAK, ABY BYLA INFORMACJA ZWROTNA O WYBRANYCH PAKIETACH\r\n    let selectedServicesString = selectedIndexes.map(service => {\r\n      return utils.serviceNames[service]\r\n    })\r\n\r\n    return <ServiceCalculatorOffer bestPrice={bestPrice} selectedServicesString={selectedServicesString}/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"service-calculator\">\r\n\r\n      <Select\r\n        options={utils.yearOptions}\r\n        onChange={(selected) => setSelectedYear(selected.value)}\r\n      />\r\n\r\n      <Paper\r\n        className=\"service-calculator__summary\"\r\n      >\r\n        {findBestDeal()}\r\n      </Paper>\r\n    </div>\r\n  )\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}